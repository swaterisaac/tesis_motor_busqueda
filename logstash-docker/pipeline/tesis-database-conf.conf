input { 
  jdbc {
    clean_run => true
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://ec2-54-83-152-251.compute-1.amazonaws.com:5432/daq6svbu4hov1e"
    jdbc_user => "ejdgaispifmugu"
    jdbc_password => "8e8173646382657e5067ae1b55976f53d196e079760f55e90f3d58411afd3e1c"
    schedule => "* * * * *"
    statement => "SELECT ofertas.id id, ofertas.nombre nombre_oferta, ofertas.precio precio, c.nombre nombre_comuna, p.nombre nombre_proveedor, r.nombre nombre_region, fecha_inicio, fecha_final, string_agg(cm.nombre, ',') as consideraciones FROM ofertas_turisticas ofertas, comunas c, proveedores p, regiones r, consideraciones_medicas cm, oferta_consideraciones oc WHERE ofertas.id_comuna = c.id AND ofertas.id_proveedor = p.id AND c.id_region = r.id AND cm.id = oc.id_consideracion AND oc.id_oferta = ofertas.id AND ofertas.id > :sql_last_value GROUP BY ofertas.id,c.nombre,p.nombre,r.nombre"
    use_column_value => true
    tracking_column => "id"
  }
}

filter{
    mutate {
      rename => {"nombre_oferta" => "descriptor"}
      rename => {"id" => "idEnDb"}
    }
    mutate{
      merge => {"descriptor" => "nombre_comuna"}
    }
    mutate{
      merge => {"descriptor" => "nombre_region"}
    }
    mutate{
      merge => {"descriptor" => "nombre_proveedor"}
    }
    mutate{
      split => {"consideraciones" => ","}
    }
    mutate{
      join => {"descriptor" => " "}
      remove_field => [ "nombre_proveedor" ]
      remove_field => [ "nombre_comuna" ]
      remove_field => [ "nombre_region" ]
    }
}

output {
  elasticsearch { 
    cloud_id => "isaacrojas-tesis-motor:ZXUtd2VzdC0xLmF3cy5mb3VuZC5pbyQxYWZlZDI2MTVlNTM0ZDg2YTE4ZWNlYjZjMTc5MmQ4ZiQ2M2RhOGZlZTIxY2U0MDU3YWQxYTIyYjBjM2VhOTJmNw=="
    cloud_auth => "elastic:zlu3A9xQaY7nzwpHaFgN5C7L"
    index => "testlogstash"
    document_type => "testlogstash"
  }
  stdout { codec => rubydebug }
}